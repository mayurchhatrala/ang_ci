!function(e){"use strict";var n=[];!function(){var n=e.module("fileReaderService",[]);n.factory("fileReader",["$q",function(e){var n=function(e,n,i){return function(){i.$apply(function(){n.resolve(e.result)})}},i=function(e,n,i){return function(){i.$apply(function(){n.reject(e.result)})}},r=function(e,r){var t=new FileReader;return t.onload=n(t,e,r),t.onerror=i(t,e,r),t},t=function(n,i){var t=e.defer(),a=r(t,i);return a.readAsDataURL(n),t.promise};return{readAsDataUrl:t}}])}(),function(){var i=e.module("ngImageInputWithPreview",["fileReaderService"]);i.directive("imageWithPreview",["fileReader","$q",function(e,i){var r="image/png,image/jpeg",t="this-is-not-an-image",a=function(e,n){e||(e=r);var i=e.split(",");return i.some(function(e){if(e===n.type)return!0;var i=e.split("/"),r=n.type.split("/");return 2===i.length&&2===r.length&&"*"===i[1]&&i[0]===r[0]})},o=function(){var e=i.defer();return e.resolve(),e.promise};return{restrict:"A",require:"ngModel",scope:{image:"=ngModel",allowedTypes:"@accept",dimensionRestrictions:"&dimensions"},link:function(r,s,c,l){s.bind("change",function(e){var n=(e.srcElement||e.target).files[0];r.file=n?n:"";var i=document.createElement("img"),t=r.dimensionRestrictions({width:i.width,height:i.height});if(t)for(var a=0;a<e.target.files.length;a++)i.push(e.target.files[a]);console.log(i),l.$setViewValue(e.target.files[0],"change")}),l.$parsers.push(function(n){return n?a(r.allowedTypes,n)?{fileReaderPromise:e.readAsDataUrl(n,r)}:t:n}),r.$watch("image",function(e){e&&"string"==typeof e&&(r.image={src:e,isPath:!0,myImage:n})}),l.$validators.image=function(e,n){var i=e||n;return i!==t},l.$asyncValidators.parsing=function(e,r){var t=e||r;return t&&t.fileReaderPromise?(t.fileReaderPromise["finally"](function(){delete t.fileReaderPromise}),t.fileReaderPromise.then(function(e){t.src=e,t.myImage=n},function(){return i.reject("Failed to parse")})):o()},l.$asyncValidators.dimensions=function(e,n){if(!c.dimensions)return o();var t=e||n;if(!t||!t.fileReaderPromise)return o();var a=i.defer();return t.fileReaderPromise.then(function(e){var n=document.createElement("img");n.addEventListener("load",function(){var e=r.dimensionRestrictions({width:n.width,height:n.height});r.$apply(function(){e?a.resolve():a.reject("Invalid dimensions")})}),n.addEventListener("error",function(){r.$apply(function(){a.reject("Failed to detect dimensions. Not an image!")})}),n.src=e},function(){a.reject("Failed to detect dimensions")}),a.promise}}}}])}()}(window.angular);